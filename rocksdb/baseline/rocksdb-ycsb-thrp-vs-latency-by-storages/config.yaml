dn_base: ~/work/mutant/log/ycsb/rocksdb-ycsb-by-storages

# stg_dev: target_iops:
#
# The time range needs to be figured out by looking at the time-vs-allmetrics plots.

local-ssd:
  # -1: max-thrp/171123-185637/ycsb/171124-000843.062-d
  10000:
    fn: 171123-192546/171123-192121/ycsb/171124-003236.229-d
    time: 00:04:00-00:19:00
  20000:
    fn: 171123-192546/171123-192145/ycsb/171124-003301.626-d
    time: 00:02:00-00:12:00
  30000:
    fn: 171123-192546/171123-192207/ycsb/171124-003351.679-d
    time: 00:01:20-00:08:00
  40000:
    fn: 171123-192546/171123-192231/ycsb/171124-003359.935-d
    time: 00:01:10-00:06:00
  50000:
    fn: 171123-192546/171123-192255/ycsb/171124-003415.016-d
    time: 00:01:00-00:05:00
  60000:
    fn: 171123-192546/171123-192313/ycsb/171124-003443.846-d
    time: 00:00:50-00:04:00
  # TODO: Redo 70K, 80K, and 90K
  # TODO: Do 1K
  70000:
    fn: 171123-192546/171123-192336/ycsb/171124-003553.173-d
    time: 00:03:00-00:04:00
    #fn: 171123-192546/171124-150122/ycsb/171124-201257.417-d
    #time: 00:00:45-01:50:00
  80000:
    fn: 171123-192546/171123-205216/ycsb/171124-020312.146-d
    time: 00:00:40-00:04:00
    #fn: 171123-192546/171124-150140/ycsb/171124-201256.404-d
    #time: 00:00:35-00:02:02
  90000:
    fn: 171123-192546/171123-205242/ycsb/171124-020403.056-d
    time: 00:00:40-00:04:00
    overloaded: true

  # From here, you don't get a sustainable throughput
  100000:
    fn: 171123-192546/171123-192440/ycsb/171124-003616.509-d
    time: 00:00:40-00:04:00
    overloaded: true

  # A big dip
  #110000: 171123-192546/171123-192503/ycsb/171124-003716.332-d

  110000:
    fn: 171123-192546/171123-214042/ycsb/171124-025239.262-d
    time: 00:00:40-00:03:00
    overloaded: true
  120000:
    fn: 171123-192546/171123-205305/ycsb/171124-020425.441-d
    time: 00:00:40-00:03:00
    overloaded: true

  # Saturated
  #130000:
  #  fn: 171123-192546/171123-205330/ycsb/171124-020405.787-d
  #  time: 00:00:40-00:03:00
  # overloaded: true


ebs-st1:
  #-1: max-thrp/171123-185714/ycsb/171124-001540.560-d

  # Skip for aesthetic
  #500:
  #  fn: 171123-192546/171123-204441/ycsb/171124-020324.827-d
  #  time: 01:30:00-08:00:00
  1000:
    fn: 171123-192546/171123-204507/ycsb/171124-020349.217-d
    time: 00:40:00-04:00:00
  1500:
    fn: 171123-192546/171123-204532/ycsb/171124-020342.520-d
    time: 00:25:00-02:40:00
  2000:
    fn: 171123-192546/171123-204559/ycsb/171124-020412.518-d
    time: 00:20:00-02:00:00
  2500:
    fn: 171123-192546/171123-204623/ycsb/171124-020430.055-d
    time: 00:25:00-01:40:00
  3000:
    fn: 171123-192546/171123-204647/ycsb/171124-020432.406-d
    time: 00:45:00-01:30:00

  # Saturated from here
  3500:
    fn: 171123-192546/171123-215703/ycsb/171124-031557.478-d
    time: 00:20:00-00:45:00
    #time: 00:25:00-01:20:00
    overloaded: true

  4000:
    fn: 171123-192546/171123-204729/ycsb/171124-020548.718-d
    time: 00:16:00-01:08:00
    overloaded: true
  #4500:
  #  fn: 171123-192546/171123-204753/ycsb/171124-020556.351-d
  #  time: 00:20:00-01:20:00

  #5000:
  #  fn: 171123-192546/171123-202035/ycsb/171124-013927.678-d
  #  time: 00:20:00-01:20:00


# # of requests is set in a way you can see long enough stabilized latency. Took some trials.
#   By looking at the file system cache size and db IOPS.
#
# Made SSTable compactions more predictable by setting L0 sstable compaction parameters and pending compaction parameters.
#   See db/db_impl.cc Open() and Open1()
